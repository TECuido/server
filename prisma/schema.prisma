// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("LOCAL_DATABASE_URL")
}



model Usuario {
  idUsuario Int @id @unique @default(autoincrement())
  nombre String @db.VarChar(100)
  correo String @db.VarChar(50) @unique
  password String @db.VarChar(100)
  refreshTokens RefreshToken[]
  emergencias Emergencia[] @relation("emisorEmergencia")
  emergenciasReceptor Emergencia[] @relation("receptorEmergencia")
  usuario1 Contacto[] @relation("usuario1")
  usuario2 Contacto[] @relation("usuario2")
  usuario Grupo[] @relation("usuarioGrupo")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt 
}

model RefreshToken {
  idToken String @id @unique @default(uuid()) 
  hashedToken String 
  idUsuario Int
  usuario Usuario @relation(fields: [idUsuario], references: [idUsuario], onDelete: Cascade)
  revoked Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt 
}

model Emergencia{
  idEmergencia  Int @id @unique @default(autoincrement())
  tipo String @db.VarChar(100)
  descripcion String @db.Text
  idEmisor Int
  usuario Usuario @relation("emisorEmergencia", fields: [idEmisor], references: [idUsuario], onDelete: Cascade)
  idReceptor Int
  usuarioReceptor Usuario @relation("receptorEmergencia", fields: [idReceptor], references: [idUsuario], onDelete: Cascade)

}

model Contacto{
  idContacto Int @id @unique @default(autoincrement())
  idUsuario1 Int
  usuario1 Usuario @relation("usuario1", fields: [idUsuario1], references: [idUsuario], onDelete: Cascade)
  idUsuario2 Int @unique
  usuario2 Usuario @relation("usuario2", fields: [idUsuario2], references: [idUsuario], onDelete: Cascade)
  contacto ContactoGrupo[] @relation("contacto")
}

model Grupo{
    idGrupo Int @id @unique @default(autoincrement())
    nombre String @db.VarChar(150)
    grupo ContactoGrupo[] @relation("grupo")
    idUsuario Int
    usuario Usuario @relation("usuarioGrupo", fields: [idUsuario], references: [idUsuario], onDelete: Cascade)
}

model ContactoGrupo{
  idContactoGrupo Int @id @unique @default(autoincrement())
  idUsuarioAgregado Int
  contacto Contacto @relation("contacto", fields: [idUsuarioAgregado], references: [idUsuario2 ], onDelete: Cascade)
  idGrupo Int
  grupo Grupo @relation("grupo", fields: [idGrupo], references: [idGrupo], onDelete: Cascade)
 
}